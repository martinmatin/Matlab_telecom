% === Message original ===
MSG = [Ms, randi([0 1],1,Md)]; % Contenu du message
T = 0:Tb:Tb*(length(MSG)-1);  % Ligne du temps définissant l'apparition de chaque bit

% === Message en symboles ===
MSG_symb = 2*MSG -1; % Codage des bits en symboles, si 0 --> -1, si 1 -->- +1


% figures des messages
%     subplot(2,1,1)
%     stairs(T,MSG)
%     axis([-0.002 inf -1.5 1.5])
% 
%     subplot(2,1,2)
%     stem(T,MSG_symb, '-.or')
%     axis([-0.002 inf -1.5 1.5])

% === Cosinus surélevé ===
b = rcosdesign(rolloff,span,sps,'normal');  % la fonction rcos
b = b/max(b);  % la fonction ramenée à 1

tb = -128:1:128; 
tc = -Tb:(2*Tb)/(length(tb)-1):Tb;

% === Les porteuses ===
f = [0:N-1]; % Vecteur de 0 à  N-1
f = f*((pi/Tb)*4);  %Coefficient des porteuses

f = cos(f'.*tc) % Matrices de porteuses
b1 = f(2,:).*b; % 
     
figure
  subplot(2,2,1) % Le message de symboles
    stem(T,MSG_symb, '-.or')
    axis([-0.002 inf -1.5 1.5])
  subplot(2,2,3)  % Les filtres FIR
    hold on 
    for freq = 1:N
        plot(tb, (f(freq,:).*b))
    end
    hold off
    grid
    xticks([-128 -64 0 64 128])
    axis([-128 128 -1 1])
  subplot(2,2,2)  % Le message convolué avec le filtre FIR
%     yo = upfirdn(MSG_symb,b,64);
%     yo1 = upfirdn(MSG_symb,b1,64);
%     stem(yo)
    hold on
    for freq = 1:N
        if freq == 1
            yo = upfirdn(MSG_symb,(f(freq,:).*b),64);
            convFirMat = yo; % matrice avec l'ensemble des message convolués
            plot(yo)
        
        else 
            yo = upfirdn(MSG_symb,(f(freq,:).*b),64);
            convFirMat = [convFirMat;yo]; % matrice avec l'ensemble des message convolués
            plot(yo);
        end
        
%         plot(tb, (f(freq,:).*b))
        
    end
%     stem(yo1)
    hold off
  subplot(2,2,4)  % Le fft du message convulé
%     stem(abs(fft(yo)))
    hold on
    for freq = 1:N
        stem(abs(fft(convFirMat)))
    end
    
    
%     stem(abs(fft(yo1)))
    hold off

